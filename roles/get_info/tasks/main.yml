- name: Get information 
  ec2_instance_info:
    region: "{{ aws_region }}"
    filters:
       instance-state-name: ["running"]
  register: ec2_info

# - name: Print EC2 IP address
#   set_fact:
#     public_ips: "{{ ec2_info.instances | map(attribute='public_ip_address') | list }}"
#   when: ec2_info.instances | length > 0
#   register: ec2_ip_list

# - name: Print EC2 IP address and OS
#   set_fact:
#     public_ips: "{{ ec2_info.instances | map(attribute='public_ip_address') | list }}"
#     os_types: "{{ ec2_info.instances | map(attribute='metadata.platformDetails.platform') | select('defined') | list }}"
#   when: ec2_info.instances | length > 0
#   register: ec2_ip_list

- name: Add Ubuntu EC2 instance(s) to host group
  lineinfile:
    dest: "{{ hostpath }}"
    regexp: "{{ item.public_ip_address }}"
    insertafter: "[webserver]"
    line: "{{ item.public_ip_address }} {{ user_ubuntu }} {{ hoststring }} {{ hoststring_ssh_verification }}"
    state: present
  loop: "{{ ec2_info.instances }}"
  when: ec2_info.instances | length > 0 and item.platform_details == 'Linux/UNIX'



- name: Add Ubuntu EC2 instance(s) to host group
  lineinfile:
    dest: "{{ hostpath }}"
    regexp: "{{ item.public_ip_address }}"
    insertafter: "[webserver]"
    line: "{{ item.public_ip_address }} {{ user_redhat }} {{ hoststring }} {{ hoststring_ssh_verification }}"
    state: present
  loop: "{{ ec2_info.instances }}"
  when: ec2_info.instances | length > 0 and item.platform_details == 'Red Hat Enterprise Linux'

# - name: Add RedHat EC2 instance(s) to host group
#   lineinfile: dest={{ hostpath }}
#               regexp={{ item }} 
#               insertafter="[webserver]" 
#               line="{{ item }} {{user_redhat}} {{hoststring}} {{hoststring_ssh_verification}}"
#               state=present
#   # with_items: "{{ec2.instances}}"
#   with_items: "{{ public_ips }}"
#   when: ansible_os_family == 'RedHat'